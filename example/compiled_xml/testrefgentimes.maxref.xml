<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="testrefgen*" module="CoolStuff">

	<digest>
		Output multiplied elements randomly
	</digest>

	<description>
		<o>testrefgen*</o> takes any incoming element, multiplies it for a random integer, and then
		outputs the results from a random outlet.
		The description tag represents a more accurate description of the object.
		This description must still be rather short, since it will appear
		in the top part of the help files.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">DeSelbyCorporation</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach objects</metadata>
		<metadata name="tag">bach llll</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				bang to output random factors
			</digest>
			<description>
				You can add an optional description if you wish, but it is not mandatory.
				In this case, a bang outputs random factor through all the factor outlets
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				Incoming integer number
			</digest>
			<description>
				Since we added the "loop" tag, this inlet is tagged as "looped" for an indefinite
				number of times, until the next inlet (indexed with 2) appears.
				You only need loops if you have a variable number of inlets/outlets. Otherwise, just omit it!
				You can also add a "copy" tag to copy a part of a common reference, located in one of the
				specified common reference files. If a copy tag cannot be found in the common reference files,
				a warning message will appear in the log.
				For instance:
			</description>
		</inlet>
		<inlet id="2" type="INLET_TYPE">
			<digest>
				Output number from all outlets
			</digest>
			<description>
				Outputs the incoming number from all the outlets.
				This inlet will appear in the reference marked as "Last outlet", since it comes after an inlet loop
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Random multiplied element
			</digest>
			<description>
				This is a common documentation snippet, which will be copied when one uses the "copy" tag, referencing the name "COMMON_DOC_RANDOM_OUTPUT".
				It is meant to be some sort of documentation you need more than once, so that it is easier to maintain.
				You can also recursively use the "copy" tag inside common snippets, for instance:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				It can be a good rule to terminate each common snipped with a line break, or a double line break, so that listed "copy" elements
				are formatted in a cleaner way:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				<br />
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Used random multiplier
			</digest>
			<description>
				This is a common documentation snippet, which will be copied when one uses the "copy" tag, referencing the name "COMMON_DOC_RANDOM_OUTPUT".
				It is meant to be some sort of documentation you need more than once, so that it is easier to maintain.
				You can also recursively use the "copy" tag inside common snippets, for instance:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				It can be a good rule to terminate each common snipped with a line break, or a double line break, so that listed "copy" elements
				are formatted in a cleaner way:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				<br />
			</description>
		</outlet>
		<outlet id="2" type="INLET_TYPE">
			<digest>
				Output all random elements
			</digest>
			<description>
				Inlets and outlets need not be documented in a specific order.
				This is the last outlet, indeed.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="num_ins" optional="0" type="int">
			<digest>
				Number of incoming numbers
			</digest>
			<description>
				First argument is the number of independent inlets, which also affects the number of outlets.
				This number does not take into account the last inlet, reserved for a number to be output only from the last outlet.
			</description>
		</objarg>
		<objarg name="maxfactor" optional="1" type="int">
			<digest>
				Maximum factor
			</digest>
			<description>
				Third (optional) argument is reserved for the maximum factor for multiplication, as for
				the <m>maxfactor</m> attribute.
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output results
			</digest>
			<description>
				Outputs the result depending on the most recently received input data.
			</description>
		</method>
		<method name="int">
			<arglist />
			<digest>
				Output a random multiple of incoming number
			</digest>
			<description>
				When an integer is received in any inlet (except first and last),
				it is multiplied by a random factor (from 1 to <m>maxfactor</m>),
				and sent along with such factor through the corresponding outlet couple.
				When an integer is received in the last inlet, is simply output through the last outlet.
				This method has no arguments, so we don't need to put any "marg" specification
			</description>
		</method>
		<method name="outputfrom">
			<arg name="outlet_num" optional="0" type="int" />
			<arg name="value" optional="0" type="int" />
			<digest>
				Output a number from a given outlet
			</digest>
			<description>
				The <m>outputfrom</m> message outputs from a given outlet (set as first parameter)
				a given number (set as second parameter). The syntax is thus: <b>outputfrom <m>outlet_num</m> <m>value</m></b>.
				This description should be an extensive description of the method behavior, with all its possible intricacies!
				At the end, if the method has arguments, you should also declare them via "marg" tags (= method arguments).
				No digest nor description is provided for "marg" specifications: this means that syntax should be clearly
				readable and understandable from the sole description. The "marg" declaration are useful so that help files
				might show the arguments in the usual grey arrowed rectangle.
				"marg" specifications need a 0-based progressive integer number identifying the position of the argument,
				then a "name" specification, setting the name of the argument (no spaces allowed!), then an "optional"
				specification, telling if the argument is optional, and at the end a "type" specification, setting the type
				of the argument. All these specification must be on a single line for each method argument.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="foo" get="1" set="1" type="int" size="1">
			<digest>
				Foo Common Attribute
			</digest>
			<description>
				Here you can document the attribute, which might be shared by multiple objects
				Since in the substitution file substitutions.h a #define is set for this line,
				this line will be substituted with the ones appearing in substitutions.h (see such file for more information)
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Foo Common Attribute" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="maxfactor" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Random Factor
			</digest>
			<description>
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				If you have common pieces of comments, you can put them in one of the common reference files
				and then just use the "copy" tag. You can of course continue writing below the "copy" tag
				and all this text will be included in the description. You can even put other copy tags,
				but only when a brand new line starts. For instance, we repeat the:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				This text is correclty shown.
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Random Factor" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--EXAMPLE-->
	<examplelist>
		<example img="testrefgen*.png" caption="Example of usage" />
	</examplelist>

	<!--DISCUSSION-->
	<discussion>
		<o>testrefgen*</o> uses uniform random algorithms to obtain randomness.
		Discussion is usually a more technical insight on the object details, possibly involves standard
		usages of the object.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="zl" />
		<seealso name="expr" />
		<seealso name="vexpr" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (bang)">
			<description>
				bang to output random factors.
				You can add an optional description if you wish, but it is not mandatory.
				In this case, a bang outputs random factor through all the factor outlets
			</description>
		</entry>
		<entry name ="Inlets 2, 3, 4... (int)">
			<description>
				Incoming integer number.
				Since we added the "loop" tag, this inlet is tagged as "looped" for an indefinite
				number of times, until the next inlet (indexed with 2) appears.
				You only need loops if you have a variable number of inlets/outlets. Otherwise, just omit it!
				You can also add a "copy" tag to copy a part of a common reference, located in one of the
				specified common reference files. If a copy tag cannot be found in the common reference files,
				a warning message will appear in the log.
				For instance:
			</description>
		</entry>
		<entry name ="The last Inlet (int)">
			<description>
				Output number from all outlets.
				Outputs the incoming number from all the outlets.
				This inlet will appear in the reference marked as "Last outlet", since it comes after an inlet loop
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlets 1, 3, 5... (int)">
			<description>
				Random multiplied element.
				This is a common documentation snippet, which will be copied when one uses the "copy" tag, referencing the name "COMMON_DOC_RANDOM_OUTPUT".
				It is meant to be some sort of documentation you need more than once, so that it is easier to maintain.
				You can also recursively use the "copy" tag inside common snippets, for instance:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				It can be a good rule to terminate each common snipped with a line break, or a double line break, so that listed "copy" elements
				are formatted in a cleaner way:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				<br />
			</description>
		</entry>
		<entry name ="Outlets 2, 4, 6... (int)">
			<description>
				Used random multiplier.
				This is a common documentation snippet, which will be copied when one uses the "copy" tag, referencing the name "COMMON_DOC_RANDOM_OUTPUT".
				It is meant to be some sort of documentation you need more than once, so that it is easier to maintain.
				You can also recursively use the "copy" tag inside common snippets, for instance:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				It can be a good rule to terminate each common snipped with a line break, or a double line break, so that listed "copy" elements
				are formatted in a cleaner way:
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				The <m>maxfactor</m> is the maximum random factor for the multiplication. The actual factor will be chosen randomly by <o>testrefgen*</o> from 1 to the
				specified integer value.
				Notice that you can use the variable NAME with an underscore right before in order to have it as a placeholder which will be substituted
				with the object name (for any object in which this snipped is used). For instance: this snipped is used right now in the object _NAME.
				You might usually want to use such specification inside "o" angular bracket tags.
				This is handy if you have portion of common documentation referring to more than one object.
				<br />
				<br />
			</description>
		</entry>
		<entry name ="The last Outlet (int)">
			<description>
				Output all random elements.
				Inlets and outlets need not be documented in a specific order.
				This is the last outlet, indeed.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		<o>testrefgen*</o> uses uniform random algorithms to obtain randomness.
		Discussion is usually a more technical insight on the object details, possibly involves standard
		usages of the object.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
multiply, signal, test, reference file, random.
			</description>
		</entry>
	</misc>

</c74object>